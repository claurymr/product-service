services:
  productservice.api:
    image: productservice
    build:
      context: .
      dockerfile: ProductService.Api/Dockerfile
    ports:
      - "${PRODUCTSERVICE_PORT}:${PRODUCTSERVICE_PORT}"
    environment:
      - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
      - ASPNETCORE_URLS=HTTP://+:${PRODUCTSERVICE_PORT}
      - AUTH__USERNAME=${AUTH__USERNAME}
      - AUTH__PASSWORD=${AUTH__PASSWORD}
      - AUTH__ROLE=${AUTH__ROLE}
      - AUTH__ISSUER=${AUTH__ISSUER}${STOREAPI_PORT}
      - AUTH__AUDIENCE=${AUTH__AUDIENCE}
      - AUTH__SECRET=${AUTH__SECRET}
    volumes:
      - productservice-data:/app/Data
    depends_on:
      - rabbitmq
    networks:
      - shared-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ${RABBITMQ__QUEUENAME}
    hostname: ${RABBITMQ__HOSTNAME}
    ports:
      - "${RABBITMQ__PORT}:${RABBITMQ__PORT}"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/app/Data
    ENVIRONMENT:
      - RABBITMQ__USERNAME=${RABBITMQ__USERNAME}
      - RABBITMQ__PASSWORD=${RABBITMQ__PASSWORD}
      - RABBITMQ__HOSTNAME=${RABBITMQ__HOSTNAME}
      - RABBITMQ__QUEUENAME=${RABBITMQ__QUEUENAME}
      - RABBITMQ__PORT=${RABBITMQ__PORT}
    networks:
      - shared-network

volumes:
  productservice-data:
  rabbitmq-data:

networks:
  shared-network:
    external: true
